@using dashboard_elite.Helpers



@if (
PageType == PageHelper.Page.Galnet ||
PageType == PageHelper.Page.Poi ||
PageType == PageHelper.Page.Mining ||
PageType == PageHelper.Page.Powers ||
PageType == PageHelper.Page.CurrentShip ||
PageType == PageHelper.Page.StoredShips ||
PageType == PageHelper.Page.StoredModules)
{
    <MudIconButton class="ma-1"
                   Size="Size.Large"
                   Variant="Variant.Filled"
                   DisableRipple="true"
                   Icon="@Icons.Material.Filled.VerticalAlignTop"
                   OnClick="ScrollTableToTop"
                   Color="@Color.Dark" />

    <MudIconButton class="ma-1"
                   Size="Size.Large"
                   Variant="Variant.Filled"
                   DisableRipple="true"
                   Icon="@Icons.Material.Filled.VerticalAlignBottom"
                   OnClick="ScrollTableToBottom"
                   Color="@Color.Dark" />

}

@if (PageType == PageHelper.Page.Engineers ||
     PageType == PageHelper.Page.Poi ||
     PageType == PageHelper.Page.Mining ||
     PageType == PageHelper.Page.Powers ||
     PageType == PageHelper.Page.StoredShips ||
     PageType == PageHelper.Page.StoredModules)
{

    <MudIconButton class="ma-1"
                   Size="Size.Large"
                   Variant="Variant.Filled"
                   DisableRipple="true"
                   Icon="@Icons.Material.Filled.ArrowLeft"
                   OnClick="() => PreviousPage(CurrentPage)"
                   Color="@Color.Dark" />

    <div class="center flex-grow-1 pagebarcaption">
        @switch (PageType)
        {
            case PageHelper.Page.Poi:
                @switch (CurrentPage)
                {
                    case 0:
                        <text>Points of Interest</text>
                        break;
                    case 1:
                        <text>Compromised Nav. Beacons</text>
                        break;
                    case 2:
                        <text>Interstellar Factors</text>
                        break;
                    case 3:
                        <text>Raw Material Traders</text>
                        break;
                    case 4:
                        <text>Manufactured Material Traders</text>
                        break;
                    case 5:
                        <text>Encoded Data Traders</text>
                        break;
                    case 6:
                        <text>Human Technology Brokers</text>
                        break;
                    case 7:
                        <text>Guardian Technology Brokers</text>
                        break;
                }
                break;
            case PageHelper.Page.Mining:
                @switch (CurrentPage)
                {
                    case 0:
                        <text>Painite Hotspots</text>
                        break;
                    case 1:
                        <text>Painite Prices</text>
                        break;
                    case 2:
                        <text>LTD Hotspots</text>
                        break;
                    case 3:
                        <text>LTD Prices</text>
                        break;
                    case 4:
                        <text>Platinum Hotspots</text>
                        break;
                    case 5:
                        <text>Platinum Prices</text>
                        break;
                    case 6:
                        <text>Tritium Prices [BUY]</text>
                        break;
                    case 7:
                        <text>Tritium Prices [SELL]</text>
                        break;
                }
                break;
            case PageHelper.Page.Powers:
                @switch (CurrentPage)
                {
                    case 0:
                        <text>Aisling Duval</text>
                        break;
                    case 1:
                        <text>Archon Delaine</text>
                        break;
                    case 2:
                        <text>Arissa Lavigny-Duval</text>
                        break;
                    case 3:
                        <text>Denton Patreus</text>
                        break;
                    case 4:
                        <text>Edmund Mahon</text>
                        break;
                    case 5:
                        <text>Felicia Winters</text>
                        break;
                    case 6:
                        <text>Li Yong-Rui</text>
                        break;
                    case 7:
                        <text>Pranav Antal</text>
                        break;
                    case 8:
                        <text>Yuri Grom</text>
                        break;
                    case 9:
                        <text>Zachary Hudson</text>
                        break;
                    case 10:
                        <text>Zemina Torval</text>
                        break;
                }
                break;
            case PageHelper.Page.Engineers:
                @(Data.EngineersList[CurrentPage].Faction)
                break;
            case PageHelper.Page.StoredShips:

                var storedShips = Ships.ShipsList.Where(x => x.Stored)
                    .OrderBy(x => x.Distance).ThenBy(x => x.ShipType).ToList();

                var storedShipsCount = storedShips?.Count ?? 0;

                if (CurrentPage < storedShipsCount)
                {
                    <text>@(storedShips[(int)CurrentPage].ShipTypeFull)</text>
                }
                break;
            case PageHelper.Page.StoredModules:
                var storedModules = Module.StoredModulesList.Values
                    .OrderBy(x => x.Distance).ToList();

                var storedModulesCount = storedModules?.Count ?? 0;

                if (CurrentPage < storedModulesCount)
                {
                    <text>@(storedModules[(int)CurrentPage].StationName)</text>
                }
                break;

        }
    </div>

    <MudIconButton class="ma-1"
                   Size="Size.Large"
                   Variant="Variant.Filled"
                   DisableRipple="true"
                   Icon="@Icons.Material.Filled.ArrowRight"
                   OnClick="() => NextPage(CurrentPage)"
                   Color="@Color.Dark"/>



}